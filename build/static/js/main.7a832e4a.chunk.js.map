{"version":3,"sources":["data.js","helpers/roundData.js","App.js","index.js"],"names":["data","roundData","map","el","Math","random","sort","App","ref","useRef","useState","verbs","setVerbs","preposition","setPreposition","isNext","setIsNext","btn","setBtn","check","setCheck","nextVerb","length","current","focus","slice","useEffect","onKeypress","e","key","document","addEventListener","removeEventListener","className","onClick","window","close","autoFocus","value","onChange","currentPreposition","target","trim","type","checked","ReactDOM","render","StrictMode","getElementById"],"mappings":"2LAAWA,G,MAAO,CACd,CAAC,QAAS,qGAAqB,MAC/B,CAAC,UAAW,+FAAoB,MAChC,CAAC,WAAY,+FAAoB,QCHxBC,EAAY,SAACD,GAAD,OAAUA,EAAKE,KAAI,SAAAC,GAAE,MAAI,CAACC,KAAKC,SAAUF,MAAKG,OAAOJ,KAAI,SAAAC,GAAE,OAAIA,EAAG,O,OCoF5EI,MA/Ef,WACE,IAAMC,EAAMC,mBADC,EAEcC,mBAAST,EAAUD,IAFjC,mBAENW,EAFM,KAECC,EAFD,OAGyBF,mBAAS,IAHlC,mBAGNG,EAHM,KAGOC,EAHP,OAIeJ,oBAAS,GAJxB,mBAINK,EAJM,KAIEC,EAJF,OAKSN,mBAAS,QALlB,mBAKNO,EALM,KAKDC,EALC,OAMaR,oBAAS,GANtB,mBAMNS,EANM,KAMCC,EAND,KAwBPC,EAAW,WACM,IAAjBV,EAAMW,OACRJ,EAAO,QAEPV,EAAIe,QAAQC,QACZZ,EAASD,EAAMc,MAAM,IACrBT,GAAU,GACVF,EAAe,MAgBnB,OAZAY,qBAAU,WACR,IAAMC,EAAa,SAAAC,GACH,UAAVA,EAAEC,KACJR,KAIJ,OADAS,SAASC,iBAAiB,WAAYJ,GAC/B,WACLG,SAASE,oBAAoB,WAAYL,MAE1C,IAGD,qBAAKM,UAAU,MAAf,SACE,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,SAASC,QAnCZ,WAClBtB,EAASX,EAAUD,IACnBgB,GAAU,GACVF,EAAe,IACfI,EAAO,QACPV,EAAIe,QAAQC,SA8BN,oBACA,qBAAKS,UAAU,QAAQC,QAAS,kBAAMC,OAAOC,SAA7C,sBAEF,sBAAKH,UAAU,OAAf,UACGtB,EAAM,GAAG,GACV,uBACE0B,WAAW,EACX7B,IAAOA,EACP8B,MAAOzB,EACP0B,SApDU,SAACX,GACnB,IAAMY,EAAqBZ,EAAEa,OAAOH,MACpCxB,EAAe0B,GACXA,EAAmBE,SAAW/B,EAAM,GAAG,IACzCK,GAAU,IAiDJ2B,KAAK,SACP,qBAAKV,UAAU,MAAf,SACGlB,GAAU,wBAAQmB,QAAS,kBAAMb,KAAvB,SAAoCJ,SAGnD,sBAAKgB,UAAU,YAAf,sBAEE,uBACEM,SAAU,kBAAMnB,GAAUD,IAC1BwB,KAAK,WACLC,QAASzB,IACVA,GAAS,4BAAIR,EAAM,GAAG,cCxEjCkC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjB,SAASkB,eAAe,U","file":"static/js/main.7a832e4a.chunk.js","sourcesContent":["export let data = [\n    ['prove', 'доказывать кому-то','to'],\n    ['explain', 'объяснять кому-то','to'],\n    ['describe', 'описывать кому-то','to'],\n    // ['write', 'писать кому-то','to'],\n    // ['belong', 'принадлежать кому-то','to'],\n    // ['introduce', 'представить кому-то','to'],\n    // ['propose', 'сделать предложение кому-то','to'],\n    // ['lie', 'лгать кому-то','to'],\n    // ['apologize', 'извиняться перед кем-то','to'],\n    // ['listen', 'слушать кого-то (что-то)','to'],\n    // ['talk', 'разговаривать с','to'],\n    // ['repeat', 'повторять кому-то','to'],\n    // ['dedicate', 'посвящать кому-то','to'],\n    // ['return', 'вернуться куда-то','to'],\n    // ['invite', 'пригласить куда-то','to'],\n]\n","export const roundData = (data) => data.map(el => [Math.random(), el]).sort().map(el => el[1]);\n","import './App.css';\nimport {data} from './data'\nimport {useEffect, useRef, useState} from \"react\";\nimport {roundData} from \"./helpers/roundData\";\n\nfunction App() {\n  const ref = useRef();\n  const [verbs, setVerbs]  = useState(roundData(data));\n  const [preposition, setPreposition] = useState('');\n  const [isNext, setIsNext] = useState(false);\n  const [btn, setBtn] = useState('Next');\n  const [check, setCheck] = useState(true);\n\n  const changeInput = (e) => {\n    const currentPreposition = e.target.value;\n    setPreposition(currentPreposition);\n    if (currentPreposition.trim() === verbs[0][2]) {\n      setIsNext(true);\n    }\n  }\n\n  const updateVerbs = () => {\n    setVerbs(roundData(data));\n    setIsNext(false);\n    setPreposition('');\n    setBtn('Next');\n    ref.current.focus();\n  }\n\n  const nextVerb = () => {\n    if (verbs.length === 1) {\n      setBtn('End');\n    } else {\n      ref.current.focus();\n      setVerbs(verbs.slice(1));\n      setIsNext(false);\n      setPreposition('');\n    }\n  }\n\n  useEffect(() => {\n    const onKeypress = e => {\n      if (e.key === 'Enter') {\n        nextVerb();\n      }\n    };\n    document.addEventListener('keypress', onKeypress);\n    return () => {\n      document.removeEventListener('keypress', onKeypress);\n    };\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <div className=\"wrap\">\n        <div className=\"close\">\n          <div className='update' onClick={updateVerbs}>Update</div>\n          <div className='close' onClick={() => window.close()}>Close</div>\n        </div>\n        <div className=\"verb\">\n          {verbs[0][0]}\n          <input\n            autoFocus={true}\n            ref = {ref}\n            value={preposition}\n            onChange={changeInput}\n            type=\"text\"/>\n          <div className=\"btn\">\n            {isNext && <button onClick={() => nextVerb()}>{btn}</button>}\n          </div>\n        </div>\n        <div className='translate'>\n          translate\n          <input\n            onChange={() => setCheck(!check)}\n            type=\"checkbox\"\n            checked={check}/>\n          {check && <p>{verbs[0][1]}</p>}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}